<?xml version="1.0" encoding="UTF-8"?>
<window>
	<defaultcontrol always="true">6000</defaultcontrol>
	<allowoverlay>no</allowoverlay>
	<controls>
		<include condition="Skin.HasSetting(VideoBackgrounds)">CommonVideoPlayingBackground</include>
		<control type="multiimage">
			<posx>0</posx>
			<posy>0</posy>
			<width>1280</width>
			<height>720</height>
			<imagepath fallback="special://skin/backgrounds/background-weather.jpg" background="true">$INFO[Skin.String(Custom_Back_Weather_Folder)]</imagepath>
			<aspectratio>scale</aspectratio>
			<timeperimage>5000</timeperimage>
			<randomize>true</randomize>
			<fadetime>2000</fadetime>
			<include condition="Skin.HasSetting(AnimateBackgrounds)">backgroundanimation</include>
			<visible>!Skin.HasSetting(Weather_Conditional_Backgrounds) + ![Player.HasVideo + Skin.HasSetting(VideoBackgrounds)]</visible>
		</control>
		<control type="multiimage">
			<posx>0</posx>
			<posy>0</posy>
			<width>1280</width>
			<height>720</height>
			<imagepath background="true">$INFO[Skin.String(Custom_Back_Weather_Conditional_Folder)]$INFO[Window(Weather).Property(Current.FanartCode)]</imagepath>
			<aspectratio>scale</aspectratio>
			<timeperimage>5000</timeperimage>
			<randomize>true</randomize>
			<fadetime>2000</fadetime>
			<include condition="Skin.HasSetting(AnimateBackgrounds)">backgroundanimation</include>
			<visible>Skin.HasSetting(Weather_Conditional_Backgrounds) + ![Player.HasVideo + Skin.HasSetting(VideoBackgrounds)]</visible>
		</control>
		<include condition="Skin.HasSetting(VizBackgrounds)">CommonVisualizationBackground</include>
		<control type="group">
			<include>ContentFade</include>
			<include condition="IsEmpty(Window(Weather).Property(Daily.IsFetched))">weather</include>
			<include condition="!IsEmpty(Window(Weather).Property(Daily.IsFetched))">weatherextended</include>
		</control>
		<control type="group">
			<posy>23</posy>
			<include>ContentFade</include>
			<include>Window_OpenClose_Left_Panel_Animation</include>
			<include condition="IsEmpty(Window(Weather).Property(Daily.IsFetched))">CommonNowPlaying</include>
			<control type="group" id="9000">
				<include condition="!Skin.HasSetting(WideSideMenuButtons)">Window_OpenClose_Left_Panel_Position_Normal</include>
				<include condition="Skin.HasSetting(WideSideMenuButtons)">Window_OpenClose_Left_Panel_Position_Wide</include>
				<include>SideMenuAnim</include>
				<control type="image">
					<posx>0</posx>
					<posy>-16</posy>
					<height>16</height>
					<texture border="0,0,10,0">shadow-top2.png</texture>
					<include condition="!Skin.HasSetting(WideSideMenuButtons)">ButtonCommonValuesNormal</include>
					<include condition="Skin.HasSetting(WideSideMenuButtons)">ButtonCommonValuesWide</include>
				</control>
				<control type="spincontrolex" id="3">
					<description>change location button</description>
					<posx>0</posx>
					<posy>0</posy>
					<font>-</font>
					<textoffsetx>5</textoffsetx>
					<include>ButtonCommonValues</include>
					<onleft>6000</onleft>
					<onright>6000</onright>
					<onup>610</onup>
					<ondown>101</ondown>
					<visible>!Skin.HasSetting(KioskMode)</visible>
				</control>
				<control type="label">
					<description>change location label</description>
					<posx>13</posx>
					<posy>0</posy>
					<height>44</height>
					<width>270</width>
					<font>font-20bc</font>
					<label>21873</label>
					<textcolor>white</textcolor>
					<shadowcolor>black</shadowcolor>
					<align>left</align>
					<aligny>center</aligny>
					<visible>!Control.HasFocus(3) + !Skin.HasSetting(KioskMode)</visible>
				</control>
				<control type="label">
					<description>change location label</description>
					<posx>13</posx>
					<posy>0</posy>
					<height>44</height>
					<width>270</width>
					<font>font-20bc</font>
					<label>21873</label>
					<textcolor>blue</textcolor>
					<shadowcolor>black</shadowcolor>
					<align>left</align>
					<aligny>center</aligny>
					<visible>Control.HasFocus(3) + !Skin.HasSetting(KioskMode)</visible>
				</control>
				<control type="button" id="101">
					<description>Current button</description>
					<posx>0</posx>
					<posy>45</posy>
					<include>ButtonCommonValues</include>
					<label>33006</label>
					<onleft>6000</onleft>
					<onright>6000</onright>
					<onup>3</onup>
					<ondown>102</ondown>
					<onfocus>Skin.SetString(WeatherExtended,1)</onfocus>
					<animation effect="slide" end="0,-45" time="0" condition="Skin.HasSetting(KioskMode)">Conditional</animation>
					<visible>!IsEmpty(Window(Weather).Property(Current.IsFetched))</visible>
				</control>
				<control type="button" id="102">
					<description>Hourly button</description>
					<posx>0</posx>
					<posy>90</posy>
					<include>ButtonCommonValues</include>
					<label>33036</label>
					<onleft>6000</onleft>
					<onright>6000</onright>
					<onup>101</onup>
					<ondown>103</ondown>
					<onfocus>Skin.SetString(WeatherExtended,2)</onfocus>
					<animation effect="slide" end="0,-45" time="0" condition="Skin.HasSetting(KioskMode)">Conditional</animation>
					<visible>!IsEmpty(Window(Weather).Property(Hourly.IsFetched))</visible>
				</control>
				<control type="button" id="103">
					<description>36 hour button</description>
					<posx>0</posx>
					<posy>135</posy>
					<include>ButtonCommonValues</include>
					<label>33034</label>
					<onleft>6000</onleft>
					<onright>6000</onright>
					<onup>102</onup>
					<ondown>104</ondown>
					<onfocus>Skin.SetString(WeatherExtended,3)</onfocus>
					<animation effect="slide" end="0,-45" time="0" condition="Skin.HasSetting(KioskMode)">Conditional</animation>
					<visible>!IsEmpty(Window(Weather).Property(36Hour.IsFetched))</visible>
				</control>
				<control type="button" id="104">
					<description>weekend button</description>
					<posx>0</posx>
					<posy>180</posy>
					<include>ButtonCommonValues</include>
					<label>33037</label>
					<onleft>6000</onleft>
					<onright>6000</onright>
					<onup>103</onup>
					<ondown>105</ondown>
					<onfocus>Skin.SetString(WeatherExtended,4)</onfocus>
					<animation effect="slide" end="0,-45" time="0" condition="Skin.HasSetting(KioskMode)">Conditional</animation>
					<visible>!IsEmpty(Window(Weather).Property(Weekend.IsFetched))</visible>
				</control>
				<control type="button" id="105">
					<description>daily button</description>
					<posx>0</posx>
					<posy>225</posy>
					<include>ButtonCommonValues</include>
					<label>31600</label>
					<onleft>6000</onleft>
					<onright>6000</onright>
					<onup>104</onup>
					<ondown>106</ondown>
					<onfocus>Skin.SetString(WeatherExtended,5)</onfocus>
					<animation effect="slide" end="0,-45" time="0" condition="Skin.HasSetting(KioskMode)">Conditional</animation>
					<visible>!IsEmpty(Window(Weather).Property(Daily.IsFetched))</visible>
				</control>
				<control type="button" id="106">
					<description>alerts button</description>
					<posx>0</posx>
					<posy>270</posy>
					<include>ButtonCommonValues</include>
					<label>33050</label>
					<onleft>6000</onleft>
					<onright>6000</onright>
					<onup>105</onup>
					<ondown>2</ondown>
					<onfocus>Skin.SetString(WeatherExtended,7)</onfocus>
					<animation effect="slide" end="0,-45" time="0" condition="Skin.HasSetting(KioskMode)">Conditional</animation>
					<visible>!IsEmpty(Window(Weather).Property(Alerts.IsFetched))</visible>
				</control>
				<control type="button" id="2">
					<description>Refresh button</description>
					<posx>0</posx>
					<posy>315</posy>
					<include>ButtonCommonValues</include>
					<label>-</label>
					<onleft>6000</onleft>
					<onright>6000</onright>
					<onup>106</onup>
					<ondown>610</ondown>
					<animation effect="slide" end="0,-90" time="0" condition="Skin.HasSetting(KioskMode)">Conditional</animation>
					<animation effect="slide" start="0,0" end="0,-45" time="0" condition="IsEmpty(Window(Weather).Property(Current.IsFetched))">Conditional</animation>
					<animation effect="slide" start="0,0" end="0,-45" time="0" condition="IsEmpty(Window(Weather).Property(Hourly.IsFetched))">Conditional</animation>
					<animation effect="slide" start="0,0" end="0,-45" time="0" condition="IsEmpty(Window(Weather).Property(36Hour.IsFetched))">Conditional</animation>
					<animation effect="slide" start="0,0" end="0,-45" time="0" condition="IsEmpty(Window(Weather).Property(Weekend.IsFetched))">Conditional</animation>
					<animation effect="slide" start="0,0" end="0,-45" time="0" condition="IsEmpty(Window(Weather).Property(Daily.IsFetched))">Conditional</animation>
					<animation effect="slide" start="0,0" end="0,-45" time="0" condition="IsEmpty(Window(Weather).Property(Alerts.IsFetched))">Conditional</animation>
				</control>
				<control type="button" id="610">
					<description>PlayerControls</description>
					<posx>0</posx>
					<posy>360</posy>
					<include>ButtonCommonValues</include>
					<label>16003</label>
					<onleft>6000</onleft>
					<onright>6000</onright>
					<onup>2</onup>
					<ondown>3</ondown>
					<onclick>ActivateWindow(playercontrols)</onclick>
					<animation effect="slide" end="0,-90" time="0" condition="Skin.HasSetting(KioskMode)">Conditional</animation>
					<animation effect="slide" start="0,0" end="0,-45" time="0" condition="IsEmpty(Window(Weather).Property(Current.IsFetched))">Conditional</animation>
					<animation effect="slide" start="0,0" end="0,-45" time="0" condition="IsEmpty(Window(Weather).Property(Hourly.IsFetched))">Conditional</animation>
					<animation effect="slide" start="0,0" end="0,-45" time="0" condition="IsEmpty(Window(Weather).Property(36Hour.IsFetched))">Conditional</animation>
					<animation effect="slide" start="0,0" end="0,-45" time="0" condition="IsEmpty(Window(Weather).Property(Weekend.IsFetched))">Conditional</animation>
					<animation effect="slide" start="0,0" end="0,-45" time="0" condition="IsEmpty(Window(Weather).Property(Daily.IsFetched))">Conditional</animation>
					<animation effect="slide" start="0,0" end="0,-45" time="0" condition="IsEmpty(Window(Weather).Property(Alerts.IsFetched))">Conditional</animation>
					<visible>Player.HasAudio | Player.HasVideo</visible>
				</control>
				<control type="image">
					<posx>0</posx>
					<posy>362</posy>
					<height>16</height>
					<texture border="0,0,10,0">shadow-bottom2.png</texture>
					<animation effect="slide" end="0,-90" time="0" condition="Skin.HasSetting(KioskMode)">Conditional</animation>
					<animation effect="slide" start="0,0" end="0,-45" time="0" condition="IsEmpty(Window(Weather).Property(Current.IsFetched))">Conditional</animation>
					<animation effect="slide" start="0,0" end="0,-45" time="0" condition="IsEmpty(Window(Weather).Property(Hourly.IsFetched))">Conditional</animation>
					<animation effect="slide" start="0,0" end="0,-45" time="0" condition="IsEmpty(Window(Weather).Property(36Hour.IsFetched))">Conditional</animation>
					<animation effect="slide" start="0,0" end="0,-45" time="0" condition="IsEmpty(Window(Weather).Property(Weekend.IsFetched))">Conditional</animation>
					<animation effect="slide" start="0,0" end="0,-45" time="0" condition="IsEmpty(Window(Weather).Property(Daily.IsFetched))">Conditional</animation>
					<animation effect="slide" start="0,0" end="0,-45" time="0" condition="IsEmpty(Window(Weather).Property(Alerts.IsFetched))">Conditional</animation>
					<animation effect="slide" start="0,0" end="0,45" time="0" condition="Player.HasAudio | Player.HasVideo">Conditional</animation>
					<include condition="!Skin.HasSetting(WideSideMenuButtons)">ButtonCommonValuesNormal</include>
					<include condition="Skin.HasSetting(WideSideMenuButtons)">ButtonCommonValuesWide</include>
				</control>
			</control>
		</control>
		<control type="group">
			<include>ContentFade</include>
			<include>Window_OpenClose_Header_Animation</include>
			<include condition="Skin.HasSetting(HateTransparency)">T-Header1</include>
			<control type="image">
				<posx>0</posx>
				<posy>0</posy>
				<width>1280</width>
				<height>74</height>
				<texture>Header.png</texture>
			</control>
			<control type="grouplist">
				<include>Breadcrumbs</include>
				<include>Breadcrumbs-Weather</include>
			</control>
			<control type="label">
				<description>weather location label</description>
				<posx>1268</posx>
				<posy>5</posy>
				<width>500</width>
				<height>20</height>
				<font>font-20</font>
				<textcolor>white</textcolor>
				<align>right</align>
				<aligny>center</aligny>
				<label>$INFO[Window(Weather).Property(Location)]</label>
			</control>
		</control>
		<include condition="Skin.HasSetting(TouchScreenMode)">TouchScreenControls</include>
		<control type="label">
			<posx>1268</posx>
			<posy>696</posy>
			<width>1200</width>
			<height>20</height>
			<label>[B]$LOCALIZE[31605] $INFO[Window(Weather).Property(WeatherProvider)][/B]</label>
			<font>font-15</font>
			<align>right</align>
			<textcolor>white</textcolor>
			<animation effect="fade" start="50" end="50" time="0" condition="true">Conditional</animation>
		</control>
	</controls>
</window>
