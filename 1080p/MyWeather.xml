<?xml version="1.0" encoding="utf-8"?>
<window>
	<defaultcontrol always="true">6000</defaultcontrol>
	<menucontrol>9000</menucontrol>
	<controls>
		<include condition="!Skin.HasSetting(HideVideoBackgrounds)">CommonVideoPlayingBackground</include>
		<control type="multiimage">
			<left>0</left>
			<top>0</top>
			<width>1920</width>
			<height>1080</height>
			<imagepath fallback="special://skin/backgrounds/background-weather.jpg" background="true">$VAR[WeatherFanartPath]</imagepath>
			<aspectratio>scale</aspectratio>
			<timeperimage>5000</timeperimage>
			<randomize>true</randomize>
			<fadetime>2000</fadetime>
			<include condition="Skin.HasSetting(AnimateBackgrounds)">backgroundanimation</include>
			<visible>![Player.HasVideo + !Skin.HasSetting(HideVideoBackgrounds)]</visible>
		</control>
		<include condition="!Skin.HasSetting(HideVisBackgrounds)">CommonVisualizationBackground</include>
		<control type="group">
			<include>ContentFade</include>
			<include>weather</include>
		</control>
		<control type="group">
			<top>34</top>
			<include>ContentFade</include>
			<include>Window_OpenClose_Left_Panel_Animation</include>
			<include condition="String.IsEmpty(Window(Weather).Property(Daily.IsFetched))">CommonNowPlaying</include>
			<control type="grouplist" id="9000">
				<include condition="!Skin.HasSetting(WideSideMenuButtons)">Window_OpenClose_Left_Panel_Position_Normal</include>
				<include condition="Skin.HasSetting(WideSideMenuButtons)">Window_OpenClose_Left_Panel_Position_Wide</include>
				<include>SideMenuAnim</include>
				<onleft>6000</onleft>
				<onright>6000</onright>
				<itemgap>-2</itemgap>
				<control type="button" id="3">
					<description>change location button</description>
					<label>21873</label>
					<include>ButtonCommonValues</include>
					<onclick>Weather.LocationNext</onclick>
					<visible>!Skin.HasSetting(KioskMode)</visible>
				</control>
				<control type="button" id="101">
					<description>Current button</description>
					<include>ButtonCommonValues</include>
					<label>33006</label>
					<onfocus>Skin.SetString(WeatherMenu,1)</onfocus>
					<visible>!String.IsEmpty(Window(Weather).Property(Current.IsFetched))</visible>
				</control>
				<control type="button" id="102">
					<description>Hourly button</description>
					<include>ButtonCommonValues</include>
					<label>33036</label>
					<onfocus>Skin.SetString(WeatherMenu,2)</onfocus>
					<visible>!String.IsEmpty(Window(Weather).Property(Hourly.IsFetched))</visible>
				</control>
				<control type="button" id="103">
					<description>36 hour button</description>
					<include>ButtonCommonValues</include>
					<label>33034</label>
					<onfocus>Skin.SetString(WeatherMenu,3)</onfocus>
					<visible>!String.IsEmpty(Window(Weather).Property(36Hour.IsFetched))</visible>
				</control>
				<control type="button" id="104">
					<description>weekend button</description>
					<include>ButtonCommonValues</include>
					<label>33037</label>
					<onfocus>Skin.SetString(WeatherMenu,4)</onfocus>
					<visible>!String.IsEmpty(Window(Weather).Property(Weekend.IsFetched))</visible>
				</control>
				<control type="button" id="105">
					<description>daily button</description>
					<include>ButtonCommonValues</include>
					<label>31600</label>
					<onfocus>Skin.SetString(WeatherMenu,5)</onfocus>
					<visible>!String.IsEmpty(Window(Weather).Property(Daily.IsFetched))</visible>
				</control>
				<control type="button" id="106">
					<description>alerts button</description>
					<include>ButtonCommonValues</include>
					<label>33050</label>
					<onfocus>Skin.SetString(WeatherMenu,6)</onfocus>
					<visible>!String.IsEmpty(Window(Weather).Property(Alerts.IsFetched))</visible>
				</control>
				<control type="button" id="2">
					<description>Refresh button</description>
					<include>ButtonCommonValues</include>
					<label>-</label>
				</control>
				<control type="button" id="610">
					<description>PlayerControls</description>
					<include>ButtonCommonValues</include>
					<label>16003</label>
					<onclick>ActivateWindow(playercontrols)</onclick>
					<visible>Player.HasAudio | Player.HasVideo</visible>
				</control>
			</control>
		</control>
		<control type="group">
			<include>ContentFade</include>
			<include>Window_OpenClose_Header_Animation</include>
			<control type="image">
				<left>0</left>
				<top>0</top>
				<width>1920</width>
				<height>82</height>
				<texture border="1">Header.png</texture>
			</control>
			<control type="grouplist">
				<include>Breadcrumbs</include>
				<include>Breadcrumbs-Weather</include>
			</control>
			<control type="label">
				<description>weather location label</description>
				<left>1152</left>
				<top>8</top>
				<width>750</width>
				<height>30</height>
				<font>font-20</font>
				<textcolor>white</textcolor>
				<align>right</align>
				<aligny>center</aligny>
				<label>$INFO[Window(Weather).Property(Location)]</label>
			</control>
		</control>
		<include condition="Skin.HasSetting(TouchScreenMode)">TouchScreenControls</include>
		<control type="label">
			<left>102</left>
			<top>1044</top>
			<width>1800</width>
			<height>30</height>
			<label>[B]$LOCALIZE[31605] $INFO[Window(Weather).Property(WeatherProvider)][/B]</label>
			<font>font-15</font>
			<align>right</align>
			<textcolor>white</textcolor>
			<animation effect="fade" start="50" end="50" time="0" condition="true">Conditional</animation>
		</control>
	</controls>
</window>
